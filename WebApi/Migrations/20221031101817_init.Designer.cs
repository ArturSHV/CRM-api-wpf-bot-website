// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221031101817_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdRole = 1,
                            Login = "admin",
                            Password = "88df599b93f59c78aaa8e73f808f46369c11f979198acc07014ef1588d0b2d28",
                            Salt = "1XMTSA84ZW"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p>В условиях, когда практически все люди используют компьютеры и интернет, кибербезопасность представляет собой реальную угрозу для многих из нас. Именно поэтому важности информационной безопасности нельзя недооценивать. Вот что вам нужно знать прежде всего о важности ИТ-безопасности.</p>\r\n</br>\r\n\r\n<p> Но для начала, давайте разберемся что же вообще из себя представляет информационная безопасность(ИБ).Простыми словами, это понятие включает в себя защиту данных от использования, раскрытия, уничтожения злоумышленниками, а также обеспечение целостности и конфиденциальности.Не только организации стремятся обеспечить защиту важной информации, но и все больше обычных людей обеспокоены этим.Почему так важна информационная безопасность ? Когда речь идет о компаниях, то здесь все понятно.Ведь потеря важных данных для любой организации — это потеря денег и репутации.</p>\r\n</br>\r\n\r\n<p> Компании должны быть уверены, что у них есть надежная защита данных и что они могут защититься от кибератак.Слабая защита данных может привести к потере или краже ключевой информации и созданию плохого опыта для клиентов.Все это способно привести к потери бизнеса.Надежная информационная безопасность снижает риски атак, применяет меры безопасности для предотвращения несанкционированного доступа к конфиденциальным данным и многое другое. </p>\r\n</br>\r\n\r\n<p> Основными проблемами в информационной безопасности являются: социальная инженерия, воздействие третьих лиц, управление исправлениями, вредоносные программы и общие уязвимости данных.</p>\r\n</br>\r\n\r\n<p><b> Социальная инженерия </b></p>\r\n<p> Это ни что иное, как психологическое манипулирование людьми для того, чтобы они совершили какое - либо действие.Например, злоумышленники втираются в доверие к человеку, а тот и не подозревая что его обманывают, сам выдает свою конфиденциальную информацию, такие как банковские пин - коды, пароли, ответы на секретные вопросы и прочее.</p>\r\n</br>\r\n\r\n<p><b> Воздействие третьих лиц </b></p>\r\n<p> Во многом это касается компаний, где любой сторонний человек может стать причиной утечки важных данных.К примеру, любой сотрудник имеющий доступ к ключевой информации компании, может стать тем самым третьим лицом, который пренебрегает защитой информации или попросту специально ее крадет.</p>\r\n</br>\r\n\r\n<p><b> Управление исправлениями </b></p>\r\n<p> Компании и обычные люди должны всегда быть в курсе последних выпусков своих программ и обновлять их до актуальных версий.Тем самым можно быть уверенным, что старые баги в программе не будут использоваться злоумышленниками в корыстных целях.</p>\r\n</br>\r\n\r\n<p><b> Вредоносные программы </b></p>\r\n<p> Существует большое количество вредоносных программ и программ вымогателей, которые часто выдают себя за другие программы и под их видом крадут данные и даже приводят к полной потере информации.</p>\r\n</br>\r\n\r\n<p><b> Общие уязвимости данных </b></p>\r\n<p> Почти каждая программа содержит в себе ошибки, совершенные разработчиками, через которые злоумышленники могут проводить кибератаки.Чтобы уменьшить риск, нужно постоянно обновлять программы и следить за тем, чтобы разработчики правили известные ошибки.Устаревшие программы, недостаточно защищенные сети и устройства, плохо обученные сотрудники — все это может стать риском для потери и утечки данных.</p>\r\n </br>\r\n\r\n<p> Абсолютно все нуждаются в защите от кибератак и угроз цифровой безопасности.Утечки данных вредны как в краткосрочной, так и в долгосрочной перспективе.Поэтому постарайтесь как можно чаще следить за обновлениями своих программ, никому не доверять пароли и доступы, не устанавливать программы из подозрительных источников.Осведомленность об информационной безопасности является важной практикой, и поможет защитить ваши данные.</p> ",
                            Image = "https://localhost:44369/img/QW7NXUNSAGENU31EYD7YELE5FN880R.jpeg",
                            Title = "Почему информационная безопасность так важна"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p>На заре появления Интернета обычные люди почти и не думали, что его можно будет использовать в коммерческих целях. В первую очередь Интернет стал источником поиска информации и просто общения. Вскоре Интернет стал развиваться, появлялось все больше сайтов и принялись открываться интернет-магазины. В Интернет пришел бизнес, вслед за ним платежные системы и покупатели. Работа с деньгами всегда очень важное серьезное дело, поэтому необходимо была защита. Так появилась технология SSL (а после и TLS) которая позволяет обеспечить защиту передаваемых данные в Интернете. Для интернет-магазинов такая защита стала первостепенной, а вскоре ее стали использовать и другие различные сайты. К примеру, при оплате картой через ваш интернет-магазин все данные покупателя будут передаваться в зашифрованном виде и никто посторонний не сможет украсть с карты деньги. Однако защита данных не единственная причина, по которой вашему сайту нужен SSL-сертификат.</p>\r\n</br>\r\n\r\n<p> Все современные браузеры отображают отсутствие SSL - сертификата красным значком, что может отпугнуть некоторых пользователей вашего сайта.Видя зеленый значок у клиентов сразу возникает больше доверия.</p>\r\n</br>\r\n\r\n<p> Поисковые системы уже давно стали располагать сайты, у которых есть SSL, выше в выдаче.Поэтому если вы хотите улучшить показатели SEO для вашего сайта, то установите SSL - сертификат.</p>\r\n</br>\r\n\r\n<p><b> Какой SSL - сертификат выбрать </b></p>\r\n<p> Существует несколько видов сертификатов, которые вы можете установить для сайта.</p>\r\n</br>\r\n\r\n<p><b> Domain Validation(DV SSL) </b> -доступный и недорогой сертификат, который дает базовую безопасность для сайта и шифрует данные при передаче.Этот вид сертификата можно использовать как бизнесу, так и обычным владельцам сайтов.</p>\r\n</br>\r\n\r\n<p><b> Organization Validation(OV SSL) </b> — этот сертификат уже стоит дороже, но кроме шифрования передаваемых данных он подтверждает юридический статус компании.Пользователи могут просмотреть, какая именно компания владеет сайтом.Этот вид сертификатов отлично подойдет для любого бизнеса, в частности для интернет - магазинов.</p>\r\n</br>\r\n\r\n<p><b> Extended Validation(EV SSL) </b> — дорогой и престижный сертификат.Он подойдет для крупных компаний, которым важна не только безопасность, но и позиционирование своего бренда.Рядом с зеленым безопасным значком будет отображаться название компании.</p>\r\n</br>\r\n\r\n<p> SSL - сертификат на данный момент очень важная часть любого сайта.Совершенно не обязательно покупать дорогой сертификат, а есть много бесплатных, к примеру, от Let's Encrypt. Обеспечьте своим клиентам безопасность во время покупки и путь они вам доверяют.</p>",
                            Image = "https://localhost:44369/img/7b28c09998adb62f177733cbcd513f1c.jpeg",
                            Title = "Зачем вашему сайту нужен SSL-сертификат"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p>Диалоговые системы искусственного интеллекта могут решать различные задачи. Они могут использоваться для бронирования билетов, заказа еды, планирования звонка и призваны помогать пользователям с различными вопросами. В этой статьей кратко рассмотрим, какую выгоду эти системы дают бизнесу и где именно используются.</p>\r\n</br>\r\n\r\n<p>Диалоговые системы — это ничто иное, как компьютерные программы и онлайн-сервисы, способные общаться с человеком посредством текста, речи, жестов, графики и иных способов. Самыми популярными диалоговыми системами являются онлайн-чаты и чат-боты которые используют уже многие компании.</p>\r\n</br>\r\n\r\n<p>Однако онлайн-сервисы и компьютерные программы на базе AI очень сложны в разработке, а также интеграции в уже существующие бизнес процесс. Поэтому часто компании ищут надежного партнера, который может предоставить решение на базе искусственного интеллекта, например, cleverbots.ru. </p>\r\n</br>\r\n\r\n<p>Диалоговые системы имеют большой потенциал для автоматизации процессов в бизнесе. Вот самые распространенные примеры их использования.</p>\r\n</br>\r\n\r\n<p><b>Интерактивное самообслуживание для клиентов</b></p>\r\n<p>Клиенты могут найти ответы на самые частые вопросы об услугах или продуктах компании через специальные онлайн-чаты или чат-боты.</p>\r\n</br>\r\n\r\n<p><b>Управляемые продажи</b></p>\r\n<p>Диалоговые системы могут помочь потенциальным покупателям выбрать лучший товар или услугу в соответствии с их потребностями. Бизнес получает более простой процесс подведения потенциальных клиентов к целевому действию — покупке.</p>\r\n</br>\r\n\r\n<p><b>Техническая поддержка</b></p>\r\n<p>Клиенты могут решать технические проблемы с помощью полезного инструмента, связанного с продуктом или услугами.</p>\r\n</br>\r\n\r\n<p><b>Интерактивный голосовой отклик</b></p>\r\n<p>Помимо обычной текстовой поддержки, клиент может получить голосовую помощь с помощью синтеза речи по наиболее частым вопросам. Подобные системы уже используют многие банки и компании занимающиеся электронной коммерцией.</p>\r\n</br>\r\n\r\n<p>Применение диалоговых систем и преимущества для бизнеса очевидны: экономия труда сотрудников, снижение рутинных задач, повышение скорости обслуживания клиентов и продаж, оперативная помощь клиенту, персонализированных подход к решению проблем и многое другое.</p>\r\n</br>\r\n\r\n<p>Существует множество потенциальных приложений ориентированных на задачи диалоговых систем и решения множества проблем бизнеса. А какие диалоговые системы на основе AI знаете вы? Делитесь в комментариях!</p>",
                            Image = "https://localhost:44369/img/605AYIWAWU143B6BYSOWJ7F2Z49HCP.jpeg",
                            Title = "Какую выгоду бизнесу дают AI-системы диалогового общения"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapScript")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "<p>Телефон: 8-800-888-88-88</p><p>Почта: mail@mail.ru</p><p>Адрес: г.Альметьевск, ул. Шевченко 48А</p>",
                            MapScript = "<iframe width=\"100%\" src=\"https://yandex.ru/map-widget/v1/?z=12&amp;ol=biz&amp;oid=37219565524\" height=\"400\" frameborder=\"0\"></iframe>",
                            Title = "Контакты"
                        });
                });

            modelBuilder.Entity("WebApi.Models.MainPageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainPageModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ButtonText = "Отправить",
                            Placeholder = "Оставьте заявку или задайте вопрос",
                            Title = "IT-консалтинг<br>без регистрации и СМС"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail1@mail.ru",
                            Status = "Получена",
                            Text = "Перезвоните мне 1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 8, 3, 20, 1, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail1@mail.ru",
                            Status = "Выполнена",
                            Text = "Перезвоните мне 2"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 8, 4, 18, 33, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail2@mail.ru",
                            Status = "Получена",
                            Text = "Перезвоните мне 3"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 8, 4, 20, 22, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail3@mail.ru",
                            Status = "Выполнена",
                            Text = "Перезвоните мне 4"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 8, 11, 13, 37, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail4@mail.ru",
                            Status = "Отменена",
                            Text = "Перезвоните мне 5"
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 8, 11, 13, 43, 0, 0, DateTimeKind.Unspecified),
                            Email = "mail2@mail.ru",
                            Status = "Выполнена",
                            Text = "Перезвоните мне 6"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p><b>ЗАКАЗЧИК:</b></p>\r\n<p>Хоум Кредит Банк</p>\r\n</br>\r\n\r\n<p><b>БИЗНЕС-ЗАДАЧА:</b></p>\r\n<p>Повышение устойчивости функционирования банка и эффективности ведения бизнеса за счет планирования процедур восстановления работоспособности информационных систем после катастроф и чрезвычайных происшествий</p>\r\n</br>\r\n\r\n<p><b>ОПИСАНИЕ:</b></p>\r\n<p>Проект был выполнен в течение полугода и состоял из двух этапов. Сначала специалисты АйТи провели обследование и анализ существующей инфраструктуры банка с позиций обеспечения непрерывности. Наиболее критичными для поддержки работоспособности в режиме 24х7 были определены 6 информационных систем, обеспечивающих функционирование основных бизнес-процессов банка, включая бухгалтерию, кредитование, розничный фронт-офис, интернет-банкинг. Были сформированы 20 высоковероятных сценариев нарушения непрерывности различной тяжести последствий, для них рассчитаны величины RTO/RPO (recovery time/recovery point) − времени, приемлемого для восстановления данных, и временного отрезка, за который необходимо эти данные получить. Затем специалисты АйТи приступили к разработке корпоративной стратегии восстановления ключевых ИТ-систем, детальных планов быстрого запуска их функционирования после инцидентов нарушения непрерывности и вариантов целевой архитектуры. По результатам проведенного аудита информационных систем и ЦОДов банка, а также разработки и оценки стратегий обеспечения непрерывности бизнеса эксперты АйТи предложили следовать сбалансированной стратегии, обеспечивающей оптимальное соотношение затрат и достигаемых результатов. Выбранная BCM-методика позволит восстановить работоспособность приложений, в зависимости от требований бизнеса, в течение не более 2 часов.</p>\r\n</br>\r\n\r\n<p><b>РЕЗУЛЬТАТ:</b></p>\r\n<p>Предложенная стратегия позволит поддерживать стабильное функционирование ключевых ИТ-систем, на базе которых осуществляются основные бизнес-процессы, что существенно повысит эффективность деятельности широкой банковской сети</p>",
                            Image = "https://localhost:44369/img/TCO24HEQ31RUUYMYWPW6E7A7G44STI.jpg",
                            Title = "Разработка стратегии обеспечения непрерывности ИТ-сервисов"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p><b>ЗАКАЗЧИК:</b></p>\r\n<p>Федеральный фонд обязательного медицинского страхования (ФОМС)</p>\r\n</br>\r\n\r\n<p><b>БИЗНЕС-ЗАДАЧА:</b></p>\r\n<p>Подготовка к созданию государственной информационной системы ОМС в рамках «Концепции информатизации системы обязательного медицинского страхования на 2008-2010 годы»</p>\r\n</br>\r\n\r\n<p><b>ОПИСАНИЕ:</b></p>\r\n<p>Проект начался с исследования и описания процессов формирования и ведения реестра застрахованных лиц и учета оказанных медицинских услуг в территориальных фондах ОМС. Затем был проведен учет всех ИТ-ресурсов ФОМС и территориальных подразделений в 59 регионах России: вычислительной, телекоммуникационной, инженерной инфраструктуры, используемого ПО, средств информационной безопасности и действующих моделей информационного обмена с другими автоматизированными системами, а также оценили уровень подготовки ИТ-специалистов федерального и территориальных фондов ОМС. Итогом проекта стал консолидированный отчет, содержащий описание и анализ текущего уровня информационного оснащения территориальных фондов ОМС, определены проблемные участки ИТ-инфраструктуры и представлены рекомендации по их модернизации, изложены методические рекомендации по унификации процессов учета застрахованных лиц и оказанной медицинской помощи в территориальных фондах ОМС. Созданная система мониторинга и управления на базе решений Microsoft System Center Operations Manager 2007 и Microsoft System Center Configuration Manager 2007 состоит из нескольких модулей: мониторинга сети передачи данных, мониторинга серверов и приложений, мониторинга доступности сервисов, сбора и обработки событий, инвентаризации и управления ПО, удаленного управления серверными системами, моделирования и визуализации сервисов.</p>\r\n</br>\r\n\r\n<p><b>РЕЗУЛЬТАТ:</b></p>\r\n<p>Консолидированный отчет, содержащий описание и анализ текущего уровня информационного оснащения территориальных фондов ОМС, система мониторинга и управления ИТ-инфраструктурой</p>",
                            Image = "https://localhost:44369/img/1519191542-370529-1008562.jpg",
                            Title = "Внедрение системы мониторинга и управления ИТ-инфраструктурой"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p><b>ЗАКАЗЧИК:</b></p>\r\n<p>Федеральный кадастровый центр «Земля»</p>\r\n</br>\r\n\r\n<p><b>БИЗНЕС-ЗАДАЧА:</b></p>\r\n<p>Повышение прозрачности сведений об объектах недвижимости в России</p>\r\n</br>\r\n\r\n<p><b>ОПИСАНИЕ:</b></p>\r\n<p>Внедрение новой системы проводилось в два этапа. Сначала специалисты АйТи установили специализированное программное обеспечение на тестовом и промышленном серверах и выполнили перенос данных по 50 кадастровым округам Нижегородской области и по 44 кадастровым округам Республики Татарстан из базы ПК ЕГРЗ на тестовый сервер. Затем специалисты АйТи провели анализ полноты и качества кадастровой информации, устранили ошибки, возникшие при выгрузке. После ликвидации ошибок и отладки работы кадастровые сведения были перенесены в единую базу данных АИС ГКН на промышленный сервер. Сотрудники кадастровых палат получают доступ к базе данных автоматизированной системы ведения государственного земельного кадастра через веб-интерфейс.</p>\r\n</br>\r\n\r\n<p><b>РЕЗУЛЬТАТ:</b></p>\r\n<p>Внедрение автоматизированной системы ведения государственного земельного кадастра имеет важное социально-экономическое значение: единая база кадастра земли стала официальным источником сведений об объектах недвижимости в России. Это позволит сформировать систему гарантий прав на недвижимое имущество, создаст необходимые условия для территориального планирования, градостроительства и развития ипотеки</p>",
                            Image = "https://localhost:44369/img/d1ae93ea-e68e-4f6c-aa4b-a279146fc0e4.jpg",
                            Title = "Внедрение автоматизированной системы ведения государственного кадастра недвижимости"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p><b>ЗАКАЗЧИК:</b></p>\r\n<p>Федеральная служба по финансовым рынкам (ФСФР)</p>\r\n</br>\r\n\r\n<p><b>БИЗНЕС-ЗАДАЧА:</b></p>\r\n<p>Повышение эффективности осуществления функций и полномочий ФСФР России по контролю и надзору в сфере финансовых рынков</p>\r\n</br>\r\n\r\n<p><b>ОПИСАНИЕ:</b></p>\r\n<p>В ходе реализации проекта был проведен анализ существующей и уточнение перспективной информационно-технологической архитектуры (ИТА) ФСФР России, организационной и территориальной структуры ФСФР России, функций и полномочий ФСФР России и ее региональных отделений, имеющихся программных и технических компонентов, а также современных технологических инноваций. По результатам проведенного обследования специалисты АйТи подготовили технические спецификации и проектные решения на программные компоненты ИАС ФСФР России, а также разработали и документировали требования прикладного и общесистемного ПО к аппаратным компонентам системы. Дальнейшие работы по проекту включали проектирование, разработку и внедрение программных компонентов ИАС ФСФР России. С их помощью было автоматизировано выполнение основных деловых процессов ФСФР России с учетом территориального распределения ИТА, что повысило эффективность регулирующей деятельности службы на финансовых рынках и производительность труда. Кроме того, система обеспечила эффективный обмен информацией в электронном виде между структурными подразделениями ФСФР России, между центральным аппаратом и региональными отделениями ФСФР России, между региональными отделениями ФСФР России и их территориальными отделами, между ФСФР России и другими государственными органами исполнительной власти, а также с участниками финансовых рынков. Для обеспечения юридической значимости электронного взаимодействия со структурными подразделениями ФСФР России, подотчетными организациями, ведомствами, администрациями субъектов федерации и гражданами обеспечена технологическая поддержка применения электронных цифровых подписей (ЭЦП) в соответствии с действующим законодательством, как для входящей, так и для исходящей корреспонденции.</p>\r\n</br>\r\n\r\n<p><b>РЕЗУЛЬТАТ:</b></p>\r\n<p>Создание информационно-аналитической системы</p>",
                            Image = "https://localhost:44369/img/spisok-brokerov-litsenzirovannykh.jpg",
                            Title = "Разработка комплексной информационно-аналитической системы"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Администратор",
                            Permission = "{\"access\": [\"*\"], \"modify\": [\"*\"]}"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Гость",
                            Permission = ""
                        });
                });

            modelBuilder.Entity("WebApi.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "<p>ИТ-аудит представляет собой независимую оценку выбранных направлений деятельности ИТ и разработку рекомендаций по их оптимизации с учетом целей ИТ и специфики бизнес-процессов</p>\r\n</br>\r\n\r\n<p><b>Цели:</b></p>\r\n<p>-Выявление и оценка рисков, связанных с текущим состоянием ИТ и бизнес-процессов, а также возможными вариантами их развития </p>\r\n<p>-Устранение рисков или минимизация последствий их реализации </p>\r\n<p>-Выявление возможностей для оптимизации структуры и процессов ИТ в соответствии с потребностями и приоритетами бизнеса </p>\r\n</br>\r\n\r\n<p><b>Примерный состав работ:</b></p>\r\n<p>-Оценка текущего состояния ИТ на наличие уязвимостей, рисков и несоответствий требованиям бизнеса </p>\r\n<p>-Анализ используемых ИТ-решений и ИТ-процессов на соответствие требованиям бизнеса организации</p> \r\n<p>-Оценка необходимости изменений в организационной ИТ-структуре </p>\r\n<p>-Разработка рекомендаций по анализируемым областям </p>\r\n</br>\r\n\r\n<p><b>Результаты проекта:</b></p>\r\n<p>-Целевая модель ИТ и состав целевой ИТ-архитектуры, включая варианты оптимальных для бизнеса ИТ-решений </p>\r\n<p>-Разработаны рекомендации по устранению выявленных проблем, рисков и неоптимальных решений </p>\r\n<p>-Разработаны рекомендации по развитию ИТ в компании, управлению ИТ-рисками и оптимизации производственной деятельности </p>",
                            Title = "Экпресс IT-аудит"
                        },
                        new
                        {
                            Id = 2,
                            Description = "<p>Опыт подобных проектов показывает, что большинство ИТ-служб имеют потенциал оптимизации затрат на 20–25% без изменения качества предоставляемых услуг.</p>\r\n</br>\r\n\r\n<p><b>Цели:</b></p>\r\n<p>-Выявление возможностей снижения затрат, связанных с ИТ </p>\r\n<p>-Оптимизация расходов на ИТ без ухудшения качества услуг </p>\r\n<p>-Непрерывность бизнеса </p>\r\n</br>\r\n\r\n<p><b>Примерный состав работ:</b></p>\r\n<p>-Оценка потенциала снижения стоимости ИТ, мини-аудит </p>\r\n<p>-Разработка практических рекомендаций по снижению затрат, связанных с ИТ-активами (оптимизация лицензионной политики, унификация аппаратного и программного обеспечения, оптимизация взаимодействия с поставщиками) </p>\r\n<p>-Разработка рекомендаций по снижению стоимости управления ИТ (оптимизация кадровой политики, оценка целесообразности аутсорсинга) </p>\r\n<p>-Оценка эффективности значимых инвестиций в ИТ </p>\r\n</br>\r\n\r\n<p><b>Результаты проекта:</b></p>\r\n<p>-Представлен сравнительный анализ затрат на ИТ среди подобных организаций (benchmarking) </p>\r\n<p>-Определены возможности снижения затрат на ИТ </p>\r\n<p>-Разработаны практические рекомендации, мероприятия для оптимизации затрат в течение 3-6 месяцев </p>\r\n<p>-Расчет окупаемости инвестиций в ИТ, приоритетность инвестирования </p>\r\n",
                            Title = "Оптимизация затрат на IT"
                        },
                        new
                        {
                            Id = 3,
                            Description = "<p>Мы представляем широкий спектр экспресс-услуг, связанных с управлением ИТ – от разработки отдельных регламентов и механизмов управления регламентацией до создания долгосрочных ИТ-стратегий.</p>\r\n</br>\r\n\r\n<p><b>Цели:</b></p>\r\n<p>-Развитие ИТ в соответствии с текущими и стратегическими требованиями и приоритетами бизнеса </p>\r\n<p>-Приведение управления ИТ в соответствие с рекомендациями Cobit </p>\r\n<p>-Максимальное соответствие объема и качества ИТ-услуг требованиям бизнеса, рекомендациям мировых стандартов, лидерам в соответствующей индустрии </p>\r\n<p>-Повышение уровня производительности и автоматизации бизнес-процессов за счет эффективного планирования и управления ИТ </p>\r\n<p>-Прозрачность стоимости ИТ-услуг для руководства компании </p>\r\n<p>-Выявление несоответствий между текущей системой управления ИТ и требованиями к ней со стороны бизнеса </p>\r\n<p>-Построение оптимальной системы управления отдельными процессами или всей структурой ИТ </p>\r\n</br>\r\n\r\n<p><b>Список возможных услуг:</b></p>\r\n<p>-Оценка текущей структуры управления ИТ на соответствие требованиям бизнеса, текущим и перспективным целям, разработка рекомендаций по повышению эффективности управления ИТ-структурой</p>\r\n<p>-Разработка управляющих документов ИТ (каталогов услуг, SLA, регламентов, политик, процедур, стандартов и др.) </p>\r\n<p>-Разработка рекомендаций по оптимизации процессов управления ИТ </p>\r\n<p>-Разработка среднесрочных и долгосрочных высокоуровневых ИТ-стратегий </p>",
                            Title = "Управление IT"
                        },
                        new
                        {
                            Id = 4,
                            Description = "<p>Для корректной работы информационных систем, создания безопасной среды хранения бизнес-данных необходимо регулярно планировать развитие и оценивать производительность ИТ-инфраструктуры</p>\r\n</br>\r\n\r\n<p><b>Цели:</b></p>\r\n<p>-Создание инфраструктуры, соответствующей бизнес-требованиям </p>\r\n<p>-Снижение стоимости владения (ТСО) ИТ-инфраструктурой </p>\r\n</br>\r\n\r\n<p><b>Список возможных услуг:</b></p>\r\n<p>-Анализ производительности инфраструктуры </p>\r\n<p>-Анализ отказоустойчивости инфраструктуры </p>\r\n<p>-Анализ безопасности и защищенности инфраструктуры </p>\r\n<p>-Планирование центров обработки данных </p>\r\n<p>-Подбор оборудования для связи, хранения данных, а также серверного оборудования </p>\r\n</br>\r\n\r\n<p><b>Результаты проекта:</b></p>\r\n<p>-Разработаны рекомендации по развитию ИТ-инфраструктуры </p>\r\n<p>-Разработаны требования для центра обработки данных </p>\r\n<p>-Рассчитана необходимая вычислительная мощность и пропускная способность каналов связи </p>\r\n<p>-Рекомендации по снижению стоимости владения (ТСО) </p>",
                            Title = "Планирование и оценка инфраструктуры IT"
                        },
                        new
                        {
                            Id = 5,
                            Description = "<p>Услуги, связанные с информационной безопасностью, включают в себя поиск уязвимостей в ИТ-системах и разработку рекомендаций по проведению защитных мероприятий.</p>\r\n</br>\r\n\r\n<p><b>Цели:</b></p>\r\n<p>-Выявление брешей в системах информационной безопасности </p>\r\n<p>-Устранение выявленных уязвимостей </p>\r\n<p>-Оценка возможности повышения уровня безопасности обследуемых информационных систем </p>\r\n<p>-Обеспечение непрерывности бизнеса, защита персональных данных </p>\r\n</br>\r\n\r\n<p><b>Примерный состав работ:</b></p>\r\n<p>-Анализ уровня защищенности информационных систем </p>\r\n<p>-Оценка возможности несанкционированного доступа к служебной и бизнес-информации, к персональным данным </p>\r\n<p>-Разработка рекомендаций по защите информационных систем от выявленных и потенциальных угроз </p>\r\n<p>-Разработка регламентов и политик по ИБ </p>\r\n</br>\r\n\r\n<p><b>Результаты проекта:</b></p>\r\n<p>-Выявлены уязвимости в системе информационной безопасности, открывавшие возможность несанкционированного доступа к ИТ-инфраструктуре и данным </p>\r\n<p>-Разработаны рекомендации по ликвидации выявленных уязвимостей  </p>\r\n<p>-Обновлены политики ИБ в соответствии с требованиями стандартов ISO 27001/27002 </p>",
                            Title = "Информационная безопасность"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Statuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Получена"
                        },
                        new
                        {
                            Id = 2,
                            Name = "В работе"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Выполнена"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Отменена"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Отклонена"
                        });
                });

            modelBuilder.Entity("WebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mail1@mail.ru",
                            Name = "Петров Петр"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mail2@mail.ru",
                            Name = "Михайлов Михаил"
                        },
                        new
                        {
                            Id = 3,
                            Email = "mail3@mail.ru",
                            Name = "Иванов Иван"
                        },
                        new
                        {
                            Id = 4,
                            Email = "mail4@mail.ru",
                            Name = "Афанасьев Афанасий"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
